Possible LLD's :
1. Design Parking Lot but with conditions : 10 parking spots, only 1 vehicle type is available, single floor/entrance/exit.
2. Snake & Ladder game
3. ATM/Vending Machine
4. Bike Rental : Similar to car rental : Q. https://leetcode.com/discuss/interview-question/4503513/Wayfair-or-L2-L4-or-Virual-Onsite-or-LLD-or-Bike-Rental-Shop
5. Design food delivery : https://medium.com/@mayankbansal933/food-delivery-app-lld-c1409ef49266
6. LLD design of JDBC type of service, SOLID Principles, Design patterns.
7. Implement Logger service like log4j 
8. Low level design for garbage collector.
9. LLD of job scheduler
10. Code Paint's Auto-fill color function
11. Producer-Consumer problem of multithreading

===============================================
1. Design system to count clicks on a video
2. Design car ride booking system
3. Desing instagram
4. Online survey system like Survey Monkey
5. Design Rate limiting system
6. Netflix/ Youtube
7. DB design for Restaturent booking apps/ housing.com / BookMyShow.
8. Design a unit conversion system
8.1 WebCrawler

9. Design a meeting scheduler where a user can create a meeting, add participants and get to know the conflicts. Solution to be scalable. 
Database schema, api contracts and pseudo code for some of the apis was expected along wit an hld.
10. How would you compute the count of keyword given TB's of file. How would you optimize and then scale this solution.
11. HLD for capturing files from different data sources (Followed by the question, how to maintain uniqueness if multiple files are similar)
12. What makes the rendering slow on the client application
13. Spring internals, Db Internals
14. How JVM Works Internally, How Hibernate Works Internally
15. How Different Dependent Projects Get Compiled?
16. Hashmap Internals, Java Memory Model, Garbage Collection Algorithm
17.  Sort an array using two stacks. Provide time complexity.
18. https://www.geeksforgeeks.org/binary-search-preferred-ternary-search/
